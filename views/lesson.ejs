<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Урок <%= lesson.numberLesson %> - <%= lesson.title %></title>
  <link rel="stylesheet" href="/index.css">
  <link rel="stylesheet" href="/tests.css">
  <script src="/showLog.js" defer></script>
  <script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
  
</head>
<body>
  <header>
    <img src="/logo.png" alt="Logo" id="header-logo">
    <div class="container1">
        <h1 id="title">Курс з Математики</h1>
    </div>  
        <div class="menu_button" id="authBlock">
            <p class="text"><a href="#">Авторизація</a></p>
            <div class="dropdown-content">
              <button onclick="window.location.href='http://localhost:4445/auth/login.html'">Ввійти</button>
              <button onclick="window.location.href='http://localhost:4445/auth/register.html'">Зареєструватися</button>
            </div>
        </div>
    
        <div class="menu_button"><a href="/" >Головна</a></div>
        <div class="menu_button"><a href="/lessons" >Курс</a></div>
        <div class="menu_button" id="profile"><a href="/profile">Профіль</a></div>
</header>

  <main>
    <div class="container">
      <section class="section" id="lesson_details">
        <h2>Урок <%= lesson.numberLesson %>: <%= lesson.title %></h2>
        <div class="lesson-menu">
          <button id="lecture-btn" class="active">Лекція</button>
          <button id="practice-btn" class="inactive">Практика</button>
        </div>
        


        
        <div id="lecture-content" class="content-section">
            <iframe width="560" height="315" 
          src="<%= lesson.videoURL %>" 
          frameborder="0" 
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
          allowfullscreen>
  </iframe>
        
        </div>
        
        <div id="practice-content" class="content-section" style="display: none;">
          <h3>Тест:</h3>
          <% if (lesson.test) { %>
            <!-- Додано меню тестів -->
            <div class="test-menu">
                <% lesson.test.questions.forEach((question, index) => { %>
                  <button class="test-menu-item" data-index="<%= index %>" data-question-id="question-<%= index %>">
                    <%= index + 1 %>
                </button>
                
                <% }) %>
            </div>
            
        <% } %>
          <div id="test-container">
              <form id="test-form">
                  <div id="question-container">
                      <% if (lesson.test) { %>
                          <% let counter = 0;
                          lesson.test.questions.forEach((question, index) => { %>
                            <div class="question" id="question-<%= index %>" data-type="<%= question.type %>" style="display: <%= index === 0 ? 'block' : 'none' %>;">
                                  <p> <%= index + 1 %>. <%= question.questionText %></p>
                                  <% if (question.questionImageURL) { %>
                                      <img src="<%= question.questionImageURL %>" alt="Question Image" />
                                  <% } %>
      
                                  <% if (question.type === 'choice') { 
                                    counter++;
                                
                                    // Функція для перетасовки масиву (алгоритм Фішера-Йейтса)
                                    const shuffleArray = (array) => {
                                        for (let i = array.length - 1; i > 0; i--) {
                                            const j = Math.floor(Math.random() * (i + 1));
                                            [array[i], array[j]] = [array[j], array[i]]; // Обмін елементами
                                        }
                                    };
                                
                                    // Перетасовуємо варіанти відповідей
                                    shuffleArray(question.options);
                                
                                    // Виводимо варіанти відповідей у випадковому порядку
                                    question.options.forEach((option, optIndex) => { %>
                                        <div class="option">
                                            <input 
                                                type="radio" 
                                                name="question<%= index %>" 
                                                value="<%= optIndex %>" 
                                                id="q<%= index %>opt<%= optIndex %>" 
                                                data-text="<%= option.optionText %>">
                                            <label for="q<%= index %>opt<%= optIndex %>">
                                                <%= option.optionText %>
                                            </label>
                                        </div>
                                    <% }) %>
                                    
                                <% } else if (question.type === 'matching') { %>
                                    <% 
// Генеруємо масив літер від 'А' до потрібної довжини на основі question.matchingPairs
const alphabet = 'АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЬЮЯ'.split('');
const answerLabels = alphabet.slice(0, question.matchingPairs.length); 
%>

<div class="matching-container">
    <h4>Частини питання:</h4>
    
    <!-- Таблиця з питаннями та варіантами відповідей -->
    <table class="matching-table">
      <thead>
          <tr>
              <th>Запитання</th>
              <th>Варіант відповіді</th>
          </tr>
      </thead>
      <!-- <% 
    // Створюємо новий масив для answerParts і перемішуємо його
    const shuffledAnswerParts = question.matchingPairs
        .map(pair => pair.answerPart)
        .sort(() => Math.random() - 0.5);
%> -->

<tbody>
    <% question.matchingPairs.forEach((pair, i) => { %>
        <tr>
          <% if (pair.questionPart != "") { %>
            <!-- Відображаємо частину питання (questionPart) без змін -->
            <td><%= i + 1 %>. <%= pair.questionPart %></td>
            <% }else{ %>
              <td></td>
              <% } %>
            <!-- Відображаємо перемішаний варіант відповіді (answerPart) -->
            <td><%= String.fromCharCode(1040 + i) %>. <%= matchingQuestions[index-counter].matchingPairs[i].answerPart  %></td>
        </tr>
    <% }) %>
</tbody>
  </table>
  
    
    <!-- Матриця вибору відповідей -->
<div class="answer-matrix">
    <h4>Виберіть відповіді:</h4>
    <table class="answer-selection">
        <thead>
            <tr>
                <th></th>
                <% answerLabels.forEach((label) => { %>
                    <th><%= label %></th>
                <% }) %>
            </tr>
        </thead>
        <tbody>
            <% question.matchingPairs.forEach((pair, i) => { 
              if(pair.questionPart === "") return; %>
                <tr>
                    <td>Запитання <%= i + 1 %></td>
                    <% answerLabels.forEach((label, answerIndex) => { %>
                        <td>
                            <label>
                            <input 
                                type="radio" 
                                name="question<%= index %> questionPart<%= i %>" 
                                value="<%= matchingQuestions[index-counter].matchingPairs[answerIndex].answerPart  %>"> <!-- Змінено на pair.answerPart -->
                                </label>
                        </td>
                    <% }) %>
                </tr>
            <% }) %>
        </tbody>
    </table>
</div>

</div>

                                  
                                  
                                  
                                  
                                  
                                  
                                  <% }else if (question.type === 'fitting') { %>
                                    <div class="fitting-answer">
                                        <input type="text" name="question<%= index %>" id="fitting-question-<%= index %>" placeholder="Ваша відповідь" />
                                    </div>
                                <% } %>
                              </div>
                          <% }) %>
                      <% } %>
                  </div>
      
                  <div class="navigation-buttons">
                      <button type="button" id="prev-question" disabled>Назад</button>
                      <button type="button" id="next-question">Далі</button>
                  </div>
      
                  <button type="submit" id="submit-test" style="display: none;">Здати тест</button>
              </form>
          </div>
      </div>
      
      </section>
    </div>
  </main>

  <footer>

  </footer>    
  <script>
    document.addEventListener("DOMContentLoaded", () => {
    const questions = document.querySelectorAll(".question");
    const testMenuItems = document.querySelectorAll(".test-menu-item");
    const prevButton = document.getElementById("prev-question");
    const nextButton = document.getElementById("next-question");
    const submitButton = document.getElementById("submit-test");

    let currentQuestionIndex = 0;

    const showQuestion = (index) => {
        questions.forEach((question, i) => {
            question.style.display = i === index ? "block" : "none";
        });
        currentQuestionIndex = index;

        // Активувати/деактивувати кнопки
        prevButton.disabled = index === 0;
        nextButton.style.display = index === questions.length - 1 ? "none" : "inline-block";
        submitButton.style.display = index === questions.length - 1 ? "inline-block" : "none";

        // Підсвітити активне питання в меню
        testMenuItems.forEach((item, i) => {
            item.classList.toggle("active", i === index);
        });
    };

    // Перехід за допомогою меню
    testMenuItems.forEach((item, index) => {
        item.addEventListener("click", () => showQuestion(index));
    });

    // Навігація кнопками
    prevButton.addEventListener("click", () => {
        if (currentQuestionIndex > 0) {
            showQuestion(currentQuestionIndex - 1);
        }
    });

    nextButton.addEventListener("click", () => {
        if (currentQuestionIndex < questions.length - 1) {
            showQuestion(currentQuestionIndex + 1);
        }
    });

    // Почати з першого питання
    showQuestion(0);
});

    function selectAnswer(questionIndex, answer) {
        // Встановлюємо вибраний варіант відповіді у відповідний елемент таблиці
        document.getElementById(`answer${questionIndex}`).innerText = answer;
        
        // За необхідності, ви можете зберегти вибраний варіант у прихованому полі для відправки форми
    }
    document.addEventListener("DOMContentLoaded", () => {
    const questions = document.querySelectorAll(".question");
    const testMenuItems = document.querySelectorAll(".test-menu-item");
    const prevButton = document.getElementById("prev-question");
    const nextButton = document.getElementById("next-question");
    const submitButton = document.getElementById("submit-test");

    let currentQuestionIndex = 0;

    const showQuestion = (index) => {
        questions.forEach((question, i) => {
            question.style.display = i === index ? "block" : "none";
        });
        currentQuestionIndex = index;

        // Активувати/деактивувати кнопки
        prevButton.disabled = index === 0;
        nextButton.style.display = index === questions.length - 1 ? "none" : "inline-block";
        submitButton.style.display = index === questions.length - 1 ? "inline-block" : "none";

        // Підсвітити активне питання в меню
        testMenuItems.forEach((item, i) => {
            item.classList.toggle("active", i === index);
        });

        // Оновити стан меню (позначити сірим завершені питання)
        updateAnsweredQuestions();
    };

    const updateAnsweredQuestions = () => {
        questions.forEach((question, index) => {
            const inputs = question.querySelectorAll("input");
            const answered = Array.from(inputs).some(input => 
                (input.type === "radio" && input.checked) || 
                (input.type === "text" && input.value.trim() !== "")
            );

            if (answered) {
                testMenuItems[index].classList.add("answered");
            } else {
                testMenuItems[index].classList.remove("answered");
            }
        });
    };

    // Перехід за допомогою меню
    testMenuItems.forEach((item, index) => {
        item.addEventListener("click", () => showQuestion(index));
    });

    // Навігація кнопками
    prevButton.addEventListener("click", () => {
        if (currentQuestionIndex > 0) {
            showQuestion(currentQuestionIndex - 1);
        }
    });

    nextButton.addEventListener("click", () => {
        if (currentQuestionIndex < questions.length - 1) {
            showQuestion(currentQuestionIndex + 1);
        }
    });

    // Слухачі для оновлення стану після взаємодії з відповідями
    questions.forEach((question) => {
        const inputs = question.querySelectorAll("input");
        inputs.forEach(input => {
            input.addEventListener("input", updateAnsweredQuestions);
            input.addEventListener("change", updateAnsweredQuestions);
        });
    });

    // Почати з першого питання
    showQuestion(0);
});

</script>
  <script>
    document.getElementById('lecture-btn').addEventListener('click', function() {
  document.getElementById('lecture-content').style.display = 'block';
  document.getElementById('practice-content').style.display = 'none';
  // Змінюємо класи
  this.classList.add('active');
  this.classList.remove('inactive');
  document.getElementById('practice-btn').classList.add('inactive');
  document.getElementById('practice-btn').classList.remove('active');
});
document.getElementById('practice-btn').addEventListener('click', function() {
      document.getElementById('lecture-content').style.display = 'none';
      document.getElementById('practice-content').style.display = 'block';
      this.classList.add('active');
      this.classList.remove('inactive');
      document.getElementById('lecture-btn').classList.add('inactive');
      document.getElementById('lecture-btn').classList.remove('active');});

    let currentQuestionIndex = 0;
    const totalQuestions = <%= lesson.test ? lesson.test.questions.length : 0 %>;

    const showQuestion = (index) => {
      document.querySelectorAll('.question').forEach((question, i) => {
        question.style.display = i === index ? 'block' : 'none';
      });

      // Контроль кнопок "Назад" і "Далі"
      document.getElementById('prev-question').disabled = index === 0;
      document.getElementById('next-question').style.display = index === totalQuestions - 1 ? 'none' : 'inline-block';
      document.getElementById('submit-test').style.display = index === totalQuestions - 1 ? 'inline-block' : 'none';
      MathJax.typeset();
    };

    document.getElementById('prev-question').addEventListener('click', () => {
      if (currentQuestionIndex > 0) {
        currentQuestionIndex--;
        showQuestion(currentQuestionIndex);
      }
    });

    document.getElementById('next-question').addEventListener('click', () => {
      if (currentQuestionIndex < totalQuestions - 1) {
        currentQuestionIndex++;
        showQuestion(currentQuestionIndex);
      }
    });

    document.getElementById('test-form').addEventListener('submit', function(event) {
    event.preventDefault();

    const formData = new FormData(this);
const answers = {};

formData.forEach((value, key) => {
    // Отримуємо вибраний елемент (радіокнопка)
    const selectedOption = document.querySelector(`input[name="${key}"]:checked`);
    if (selectedOption) {
        // Отримуємо текст із атрибута data-text
        const optionText = selectedOption.getAttribute('data-text');
        answers[key] = {
            index: value, // Індекс вибраної відповіді
            text: optionText // Текст вибраної відповіді
        };
    }
});

fetch('/test/pass', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json'
    },
    body: JSON.stringify({
        topic: '<%= lesson.title %>',
        answers: answers
    })
})
.then(response => response.json())
.then(data => {
    alert('Тест успішно здано! Отримано ' + data.result.score + ' балів!');
    const feedback = data.feedback; // Використовуємо `feedback`, що повертається з сервера
    console.log(feedback);
    feedback.forEach((item, index) => {
        const questionElement = item.userAnswer ? document.querySelector(`[data-index="${index}"]`) : null;
        // const inputs = document.querySelectorAll(`input[name="question${index}"]`);
        const inputs = document.querySelectorAll(`input`);
        //console.log(inputs);
        //console.log('item is ' + JSON.stringify(item))
        
    if(item.correctAnswer !== item.userAnswer || Array.isArray(item.correctAnswer)){
        
        inputs.forEach((input, i) => {
            input.disabled = true;
        if(Array.isArray(item.correctAnswer)){
            const indexes = input.name.match(/\d+/g);
            const label = input.parentElement; // Отримуємо батьківський елемент
        if (label.tagName === 'LABEL' && input.checked && indexes[0] == index) { // Перевіряємо, чи це <label>
            if(item.correctAnswer[indexes[1]] !== input.value){
                label.style.backgroundColor = 'red';
            }else{
                label.style.backgroundColor = 'green';
            }
        }

        }
        const optionText = input.getAttribute('data-text');
        const label = document.querySelector(`label[for="${input.id}"]`);
        // console.log('option text is ' + optionText);
        // console.log('correct answer is ' + item.correctAnswer);
        // Перевіряємо, чи правильна відповідь
        if (optionText === item.correctAnswer && item.userAnswer) {
            //console.log('color is changed');
            // Знаходимо label, що відповідає цьому input
            //const label = document.querySelector(`label[for="${input.id}"]`);
            
            // Змінюємо фон label на зелений
            //if (label) {
                label.style.backgroundColor = 'green';
                label.style.color = 'white';
            //}
        }else if(optionText === item.userAnswer){
            //const label = document.querySelector(`label[for="${input.id}"]`);
            label.style.backgroundColor = 'red';
            label.style.color = 'white';
        }
    })}

        if (questionElement != null && !item.userAnswer.every(element => element === null)) {
            console.log('label is colored')
            // Додаємо класи для правильних/неправильних відповідей
            if (item.isCorrect) {
                questionElement.classList.remove('incorrect');
                questionElement.classList.add('correct');
            } else {
                console.log(item)
                questionElement.classList.remove('correct');
                questionElement.classList.add('incorrect');
            }
        }
    });
    document.getElementById("submit-test").disabled = true;
})
.catch(error => {
        console.error('Error:', error);
        alert('Помилка. Зареєструйтеся на курсі, щоб зберігати результати, і в разі повторної помилки, зверніться, будь ласка, до мене в телеграм.');
    });
});





    // Показати перше питання при завантаженні сторінки
    showQuestion(currentQuestionIndex);
  </script>
  

  
</body>
</html>
